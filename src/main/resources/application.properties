spring.application.name=MovieBookingApplication
server.port=8081
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=MOVIE


spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset = earliest
spring.kafka.consumer.key-deserializer= org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer = org.apache.kafka.common.serialization.StringDeserializer
topic.creation.enable = true
spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.apache.kafka.common.serialization.StringSerializer

#logging pattern for file -- it will s=create anthother file called data
##logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
logging.file.name=logs/data.log

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always